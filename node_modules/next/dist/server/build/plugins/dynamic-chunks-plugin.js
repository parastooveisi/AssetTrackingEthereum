'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _webpackSources = require('webpack-sources');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DynamicChunksPlugin = function () {
  function DynamicChunksPlugin() {
    (0, _classCallCheck3.default)(this, DynamicChunksPlugin);
  }

  (0, _createClass3.default)(DynamicChunksPlugin, [{
    key: 'apply',
    value: function apply(compiler) {
      var isImportChunk = /^chunks[/\\].*\.js$/;
      var matchChunkName = /^chunks[/\\](.*)$/;

      compiler.plugin('compilation', function (compilation) {
        compilation.plugin('optimize-chunk-assets', function (chunks, callback) {
          chunks = chunks.filter(function (chunk) {
            return isImportChunk.test(chunk.name);
          });

          chunks.forEach(function (chunk) {
            var asset = compilation.assets[chunk.name];
            if (!asset) return;

            var chunkName = matchChunkName.exec(chunk.name)[1];
            var concat = new _webpackSources.ConcatSource();

            concat.add('__NEXT_REGISTER_CHUNK(\'' + chunkName + '\', function() {\n          ');
            concat.add(asset);
            concat.add('\n            })\n          ');

            // Replace the exisiting chunk with the new content
            compilation.assets[chunk.name] = concat;

            // This is to support, webpack dynamic import support with HMR
            compilation.assets['chunks/' + chunk.name] = concat;
          });

          callback();
        });
      });
    }
  }]);
  return DynamicChunksPlugin;
}();

exports.default = DynamicChunksPlugin;