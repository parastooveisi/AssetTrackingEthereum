{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport tracker from \"../ethereum/tracker\";\nimport { Link } from \"../routes\";\n\nvar AssetRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AssetRow, _Component);\n\n  function AssetRow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssetRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssetRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"confirm\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context.sent;\n              tracker.methods.confirmReceived(_this.props.asset.id).send({\n                from: accounts[0],\n                gas: \"1000000\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"history\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var id;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _this.props.asset.id;\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    return _this;\n  }\n\n  _createClass(AssetRow, [{\n    key: \"render\",\n    value: function render() {\n      var Row = Table.Row,\n          Cell = Table.Cell;\n      return this.props.asset.id, React.createElement(Row, null, React.createElement(Cell, null, this.props.asset.id), React.createElement(Cell, null, this.props.asset.name), React.createElement(Cell, null, this.props.asset.description), React.createElement(Cell, null, this.props.asset.manufacture), React.createElement(Cell, null, this.props.asset.price), React.createElement(Cell, null, this.props.asset.owner), React.createElement(Cell, null, React.createElement(Link, {\n        route: \"/assets/history/\".concat(this.props.asset.id)\n      }, React.createElement(\"a\", null, React.createElement(Button, {\n        basic: true,\n        value: this.props.asset.id,\n        content: \"History\"\n      })))), React.createElement(Cell, null, React.createElement(Button, {\n        color: \"green\",\n        basic: true,\n        onClick: this.confirm,\n        loading: this.state.loading\n      }, \"Confirm\")));\n    }\n  }]);\n\n  return AssetRow;\n}(Component);\n\nexport default AssetRow;","map":null,"metadata":{},"sourceType":"module"}