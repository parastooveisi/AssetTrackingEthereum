{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/components/AssetRow.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport tracker from \"../ethereum/tracker\";\nimport { Link } from \"../routes\";\n\nvar AssetRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AssetRow, _Component);\n\n  function AssetRow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssetRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssetRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"confirm\", function _callee() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 3:\n              accounts = _context.sent;\n              tracker.methods.confirmReceived(_this.props.asset.id).send({\n                from: accounts[0],\n                gas: \"1000000\"\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"history\", function _callee2() {\n      var id;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _this.props.asset.id;\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(AssetRow, [{\n    key: \"render\",\n    value: function render() {\n      var Row = Table.Row,\n          Cell = Table.Cell;\n      return this.props.asset.id, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.asset.id), __jsx(Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.asset.name), __jsx(Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.asset.description), __jsx(Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.asset.manufacture), __jsx(Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.asset.price), __jsx(Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.asset.owner), __jsx(Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(Link, {\n        route: \"/assets/history/\".concat(this.props.asset.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Button, {\n        basic: true,\n        value: this.props.asset.id,\n        content: \"History\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })))), __jsx(Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"green\",\n        basic: true,\n        onClick: this.confirm,\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Confirm\")));\n    }\n  }]);\n\n  return AssetRow;\n}(Component);\n\nexport default AssetRow;","map":{"version":3,"sources":["/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/components/AssetRow.js"],"names":["React","Component","Table","Button","web3","tracker","Link","AssetRow","loading","setState","eth","getAccounts","accounts","methods","confirmReceived","props","asset","id","send","from","gas","Row","Cell","name","description","manufacture","price","owner","confirm","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport tracker from \"../ethereum/tracker\";\nimport { Link } from \"../routes\";\n\n\nclass AssetRow extends Component {\n  state = {\n    loading: false\n  };\n  confirm = async() => {\n    this.setState({ loading: true});\n    const accounts = await web3.eth.getAccounts();\n    tracker.methods.confirmReceived(this.props.asset.id).send({\n      from: accounts[0],\n      gas: \"1000000\"\n    });\n    this.setState({ loading: false});\n  };\n  history = async() => {\n    const id = this.props.asset.id;\n  };\n  render() {\n    const { Row, Cell } = Table;\n    return (\n      this.props.asset.id,\n      <Row>\n\n        <Cell>{this.props.asset.id}</Cell>\n        <Cell>{this.props.asset.name}</Cell>\n        <Cell>{this.props.asset.description}</Cell>\n        <Cell>{this.props.asset.manufacture}</Cell>\n        <Cell>{this.props.asset.price}</Cell>\n        <Cell>{this.props.asset.owner}</Cell>\n        <Cell>\n        <Link route={`/assets/history/${this.props.asset.id}`}>\n          <a>\n            <Button basic value = {this.props.asset.id}\n              content=\"History\"\n            />\n          </a>\n        </Link>\n\n        </Cell>\n        <Cell>\n\n            <Button color = \"green\"  basic onClick = {this.confirm} loading={this.state.loading}>\n                Confirm\n            </Button>\n\n        </Cell>\n      </Row>\n    );\n  }\n}\n\nexport default AssetRow;\n"]},"metadata":{},"sourceType":"module"}