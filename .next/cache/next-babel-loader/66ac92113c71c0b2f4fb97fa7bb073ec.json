{"ast":null,"code":"var _jsxFileName = \"/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/pages/assets/new.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Message, Input } from \"semantic-ui-react\";\nimport tracker from \"../../ethereum/tracker\";\nimport Layout from \"../../components/Layout\";\nimport { Link } from \"../../routes\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass AssetNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      description: \"\",\n      manufacturer: \"\",\n      price: \"\",\n      zipcode: \"\",\n      amountToStake: \"\",\n      loading: false,\n      errorMessage: \"\"\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const {\n        name,\n        description,\n        manufacturer,\n        price,\n        zipcode,\n        amountToStake\n      } = this.state; //console.log(id);\n\n      this.setState({\n        loading: true,\n        errorMessage: \"\"\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        console.log(\"sasad\", accounts);\n        await tracker.methods.createAsset(name, description, manufacturer, price, zipcode).send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.amountToStake, \"ether\"),\n          gas: \"1000000\"\n        });\n        var d = new Date().toLocaleTimeString(); // for now\n\n        console.log(d); //   var event = tracker.AssetCreate().watch(function(error, result) {\n        //     console.log(result);\n        // });\n\n        Router.pushRoute(\"/\");\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" Register New Product \"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Name\"), __jsx(Input, {\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Description\"), __jsx(Input, {\n      value: this.state.description,\n      onChange: event => this.setState({\n        description: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Manufacturer\"), __jsx(Input, {\n      value: this.state.manufacturer,\n      onChange: event => this.setState({\n        manufacturer: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Price\"), __jsx(Input, {\n      value: this.state.price,\n      onChange: event => this.setState({\n        price: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Coordinates\"), __jsx(Input, {\n      value: this.state.zipcode,\n      onChange: event => this.setState({\n        zipcode: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Stake\"), __jsx(Input, {\n      value: this.state.amountToStake,\n      onChange: event => this.setState({\n        amountToStake: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), __jsx(Button, {\n      primary: true,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Create\")));\n  }\n\n}\n\nexport default AssetNew; // <Form.Field>\n//   <label>ID</label>\n//   <Input\n//     value={this.state.id}\n//     onChange={event => this.setState({ id: event.target.value })}\n//   />\n// </Form.Field>","map":{"version":3,"sources":["/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/pages/assets/new.js"],"names":["React","Component","Form","Button","Message","Input","tracker","Layout","Link","web3","Router","AssetNew","name","description","manufacturer","price","zipcode","amountToStake","loading","errorMessage","event","preventDefault","state","setState","accounts","eth","getAccounts","console","log","methods","createAsset","send","from","value","utils","toWei","gas","d","Date","toLocaleTimeString","pushRoute","err","message","render","onSubmit","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,KAAhC,QAA6C,mBAA7C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCACvB;AACNW,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,YAAY,EAAE,EAHR;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,aAAa,EAAC,EANR;AAONC,MAAAA,OAAO,EAAE,KAPH;AAQNC,MAAAA,YAAY,EAAE;AARR,KADuB;;AAAA,sCAYpB,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAET,QAAAA,IAAF;AAAQC,QAAAA,WAAR;AAAqBC,QAAAA,YAArB;AAAmCC,QAAAA,KAAnC;AAA0CC,QAAAA,OAA1C;AAAmDC,QAAAA;AAAnD,UAAoE,KAAKK,KAA/E,CAFwB,CAGxB;;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,YAAY,EAAE;AAA/B,OAAd;;AAEA,UAAI;AACF,cAAMK,QAAQ,GAAG,MAAMf,IAAI,CAACgB,GAAL,CAASC,WAAT,EAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,QAApB;AACA,cAAMlB,OAAO,CAACuB,OAAR,CACHC,WADG,CACSlB,IADT,EACeC,WADf,EAC4BC,YAD5B,EAC0CC,KAD1C,EACiDC,OADjD,EAEHe,IAFG,CAEE;AACJC,UAAAA,IAAI,EAAER,QAAQ,CAAC,CAAD,CADV;AAEJS,UAAAA,KAAK,EAAExB,IAAI,CAACyB,KAAL,CAAWC,KAAX,CAAiB,KAAKb,KAAL,CAAWL,aAA5B,EAA2C,OAA3C,CAFH;AAGJmB,UAAAA,GAAG,EAAE;AAHD,SAFF,CAAN;AAQE,YAAIC,CAAC,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAR,CAXA,CAWyC;;AACzCZ,QAAAA,OAAO,CAACC,GAAR,CAAYS,CAAZ,EAZA,CAcF;AACA;AACA;;AAEA3B,QAAAA,MAAM,CAAC8B,SAAP,CAAiB,GAAjB;AACD,OAnBD,CAmBE,OAAOC,GAAP,EAAY;AACZ,aAAKlB,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAEsB,GAAG,CAACC;AAApB,SAAd;AACD;;AACD,WAAKnB,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAzC8B;AAAA;;AA2C/ByB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKtB,KAAL,CAAWH,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWV,IADpB;AAEE,MAAA,QAAQ,EAAEQ,KAAK,IAAI,KAAKG,QAAL,CAAc;AAAEX,QAAAA,IAAI,EAAEQ,KAAK,CAACyB,MAAN,CAAaZ;AAArB,OAAd,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EASE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWT,WADpB;AAEE,MAAA,QAAQ,EAAEO,KAAK,IACb,KAAKG,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEO,KAAK,CAACyB,MAAN,CAAaZ;AAA5B,OAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,EAmBE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWR,YADpB;AAEE,MAAA,QAAQ,EAAEM,KAAK,IACb,KAAKG,QAAL,CAAc;AAAET,QAAAA,YAAY,EAAEM,KAAK,CAACyB,MAAN,CAAaZ;AAA7B,OAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAnBF,EA6BE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWP,KADpB;AAEE,MAAA,QAAQ,EAAEK,KAAK,IAAI,KAAKG,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEK,KAAK,CAACyB,MAAN,CAAaZ;AAAtB,OAAd,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA7BF,EAoCE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWN,OADpB;AAEE,MAAA,QAAQ,EAAEI,KAAK,IAAI,KAAKG,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAEI,KAAK,CAACyB,MAAN,CAAaZ;AAAxB,OAAd,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApCF,EA2CE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWL,aADpB;AAEE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKG,QAAL,CAAc;AAAEN,QAAAA,aAAa,EAAEG,KAAK,CAACyB,MAAN,CAAaZ;AAA9B,OAAd,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA3CF,EAmDE,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWH,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnDF,EAoDE,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWJ,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApDF,CAFF,CADF;AA6DD;;AAzG8B;;AA4GjC,eAAeP,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Form, Button, Message, Input } from \"semantic-ui-react\";\nimport tracker from \"../../ethereum/tracker\";\nimport Layout from \"../../components/Layout\";\nimport { Link } from \"../../routes\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass AssetNew extends Component {\n  state = {\n    name: \"\",\n    description: \"\",\n    manufacturer: \"\",\n    price: \"\",\n    zipcode: \"\",\n    amountToStake:\"\",\n    loading: false,\n    errorMessage: \"\"\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n    const { name, description, manufacturer, price, zipcode, amountToStake} = this.state;\n    //console.log(id);\n    this.setState({ loading: true, errorMessage: \"\" });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      console.log(\"sasad\",accounts);\n      await tracker.methods\n        .createAsset(name, description, manufacturer, price, zipcode)\n        .send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.amountToStake, \"ether\"),\n          gas: \"1000000\"\n        });\n\n        var d = new Date().toLocaleTimeString(); // for now\n        console.log(d);\n\n      //   var event = tracker.AssetCreate().watch(function(error, result) {\n      //     console.log(result);\n      // });\n\n      Router.pushRoute(\"/\");\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h3> Register New Product </h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Name</label>\n            <Input\n              value={this.state.name}\n              onChange={event => this.setState({ name: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Description</label>\n            <Input\n              value={this.state.description}\n              onChange={event =>\n                this.setState({ description: event.target.value })\n              }\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Manufacturer</label>\n            <Input\n              value={this.state.manufacturer}\n              onChange={event =>\n                this.setState({ manufacturer: event.target.value })\n              }\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Price</label>\n            <Input\n              value={this.state.price}\n              onChange={event => this.setState({ price: event.target.value })}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Coordinates</label>\n            <Input\n              value={this.state.zipcode}\n              onChange={event => this.setState({ zipcode: event.target.value })}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Stake</label>\n            <Input\n              value={this.state.amountToStake}\n              onChange={event => this.setState({ amountToStake: event.target.value })}\n            />\n          </Form.Field>\n\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\n          <Button primary loading={this.state.loading}>\n            Create\n          </Button>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default AssetNew;\n\n\n// <Form.Field>\n//   <label>ID</label>\n//   <Input\n//     value={this.state.id}\n//     onChange={event => this.setState({ id: event.target.value })}\n//   />\n// </Form.Field>\n"]},"metadata":{},"sourceType":"module"}