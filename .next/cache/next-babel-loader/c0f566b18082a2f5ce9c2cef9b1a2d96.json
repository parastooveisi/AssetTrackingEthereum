{"ast":null,"code":"var _jsxFileName = \"/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/components/AssetRow.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport tracker from \"../ethereum/tracker\";\nimport { Link } from \"../routes\";\n\nclass AssetRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false\n    });\n\n    _defineProperty(this, \"confirm\", async () => {\n      this.setState({\n        loading: true\n      });\n      const accounts = await web3.eth.getAccounts();\n      tracker.methods.confirmReceived(this.props.asset.id).send({\n        from: accounts[0],\n        gas: \"1000000\"\n      });\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"history\", async () => {\n      const id = this.props.asset.id;\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    return this.props.asset.id, __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.asset.id), __jsx(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.asset.name), __jsx(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.asset.description), __jsx(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.asset.manufacture), __jsx(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.asset.price), __jsx(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.asset.owner), __jsx(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(Link, {\n      route: `/assets/history/${this.props.asset.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Button, {\n      basic: true,\n      value: this.props.asset.id,\n      content: \"History\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })))), __jsx(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Button, {\n      color: \"green\",\n      basic: true,\n      onClick: this.confirm,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Confirm\")));\n  }\n\n}\n\nexport default AssetRow;","map":{"version":3,"sources":["/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/components/AssetRow.js"],"names":["React","Component","Table","Button","web3","tracker","Link","AssetRow","loading","setState","accounts","eth","getAccounts","methods","confirmReceived","props","asset","id","send","from","gas","render","Row","Cell","name","description","manufacture","price","owner","confirm","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport tracker from \"../ethereum/tracker\";\nimport { Link } from \"../routes\";\n\n\nclass AssetRow extends Component {\n  state = {\n    loading: false\n  };\n  confirm = async() => {\n    this.setState({ loading: true});\n    const accounts = await web3.eth.getAccounts();\n    tracker.methods.confirmReceived(this.props.asset.id).send({\n      from: accounts[0],\n      gas: \"1000000\"\n    });\n    this.setState({ loading: false});\n  };\n  history = async() => {\n    const id = this.props.asset.id;\n  };\n  render() {\n    const { Row, Cell } = Table;\n    return (\n      this.props.asset.id,\n      <Row>\n\n        <Cell>{this.props.asset.id}</Cell>\n        <Cell>{this.props.asset.name}</Cell>\n        <Cell>{this.props.asset.description}</Cell>\n        <Cell>{this.props.asset.manufacture}</Cell>\n        <Cell>{this.props.asset.price}</Cell>\n        <Cell>{this.props.asset.owner}</Cell>\n        <Cell>\n        <Link route={`/assets/history/${this.props.asset.id}`}>\n          <a>\n            <Button basic value = {this.props.asset.id}\n              content=\"History\"\n            />\n          </a>\n        </Link>\n\n        </Cell>\n        <Cell>\n\n            <Button color = \"green\"  basic onClick = {this.confirm} loading={this.state.loading}>\n                Confirm\n            </Button>\n\n        </Cell>\n      </Row>\n    );\n  }\n}\n\nexport default AssetRow;\n"]},"metadata":{},"sourceType":"module"}