{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Card, Button, Table } from \"semantic-ui-react\";\nimport tracker from \"../ethereum/tracker\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport web3 from \"../ethereum/web3\";\nimport AssetRow from \"../components/AssetRow\";\n\nvar AssetTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AssetTracker, _Component);\n\n  function AssetTracker() {\n    _classCallCheck(this, AssetTracker);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AssetTracker).apply(this, arguments));\n  }\n\n  _createClass(AssetTracker, [{\n    key: \"renderbuyers\",\n    value: function renderbuyers() {\n      var items = this.props.buyers.map(function (address) {\n        return {\n          header: address,\n          description: \"\",\n          fluid: true\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderproducers\",\n    value: function renderproducers() {\n      var items = this.props.producers.map(function (address) {\n        return {\n          header: address,\n          description: \"\",\n          fluid: true\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      return this.props.assets.map(function (asset, index) {\n        return __jsx(AssetRow, {\n          key: index,\n          id: index,\n          asset: asset //address={this.props.owner}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" List of all producers! \"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.renderproducers()), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" List of all Purchesers! \"), this.renderbuyers()), __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" Asset details! \"), __jsx(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"ID\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Name\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Description\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Manufacturer\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Price\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Address of Owner\"))), __jsx(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.renderRows())));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var buyers, producers, assetCount, id, assets;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(tracker.methods.getbuyers().call());\n\n            case 2:\n              buyers = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(tracker.methods.getproducers().call());\n\n            case 5:\n              producers = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(tracker.methods.assetsCount().call());\n\n            case 8:\n              assetCount = _context.sent;\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(tracker.methods.getid().call());\n\n            case 11:\n              id = _context.sent;\n              console.log(id); // const info = await web3.eth.getBlock(blockNumber);\n              // console.log(info);\n\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(_Promise.all(Array(_parseInt(assetCount)).fill().map(function (element, index) {\n                return tracker.methods.assets(index).call();\n              })));\n\n            case 15:\n              assets = _context.sent;\n              return _context.abrupt(\"return\", {\n                buyers: buyers,\n                producers: producers,\n                assets: assets,\n                assetCount: assetCount\n              });\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return AssetTracker;\n}(Component);\n\nexport default AssetTracker;","map":{"version":3,"sources":["/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/pages/index.js"],"names":["React","Component","Card","Button","Table","tracker","Layout","Link","web3","AssetRow","AssetTracker","items","props","buyers","map","address","header","description","fluid","producers","assets","asset","index","Header","Row","HeaderCell","Body","renderproducers","renderbuyers","renderRows","methods","getbuyers","call","getproducers","assetsCount","assetCount","getid","id","console","log","all","Array","fill","element"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;IAEMC,Y;;;;;;;;;;;;;mCA0BW;AACb,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAAAC,OAAO,EAAI;AAC7C,eAAO;AACLC,UAAAA,MAAM,EAAED,OADH;AAELE,UAAAA,WAAW,EAAE,EAFR;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD,OANa,CAAd;AAQA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEP,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;sCACiB;AAChB,UAAMA,KAAK,GAAG,KAAKC,KAAL,CAAWO,SAAX,CAAqBL,GAArB,CAAyB,UAAAC,OAAO,EAAI;AAChD,eAAO;AACLC,UAAAA,MAAM,EAAED,OADH;AAELE,UAAAA,WAAW,EAAE,EAFR;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD,OANa,CAAd;AAQA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEP,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;iCAEY;AACX,aAAO,KAAKC,KAAL,CAAWQ,MAAX,CAAkBN,GAAlB,CAAsB,UAACO,KAAD,EAAQC,KAAR,EAAkB;AAC7C,eACE,MAAC,QAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,EAAE,EAAEA,KAFN;AAGE,UAAA,KAAK,EAAED,KAHT,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,OATM,CAAP;AAUD;;;6BACQ;AAAA,UACCE,MADD,GACmCnB,KADnC,CACCmB,MADD;AAAA,UACSC,GADT,GACmCpB,KADnC,CACSoB,GADT;AAAA,UACcC,UADd,GACmCrB,KADnC,CACcqB,UADd;AAAA,UAC0BC,IAD1B,GACmCtB,KADnC,CAC0BsB,IAD1B;AAGP,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,eAAL,EAAN,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAC,YADN;AAEE,QAAA,IAAI,EAAC,qEAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCANF,EAOG,KAAKC,YAAL,EAPH,CAHF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZF,EAcE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANF,CADF,CADF,EAYE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKC,UAAL,EAAP,CAZF,CAdF,CADF;AA+BD;;;oCA9F4BjB,K;;;;;;;+CACNP,OAAO,CAACyB,OAAR,CAAgBC,SAAhB,GAA4BC,IAA5B,E;;;AAAfnB,cAAAA,M;;+CACkBR,OAAO,CAACyB,OAAR,CAAgBG,YAAhB,GAA+BD,IAA/B,E;;;AAAlBb,cAAAA,S;;+CACmBd,OAAO,CAACyB,OAAR,CAAgBI,WAAhB,GAA8BF,IAA9B,E;;;AAAnBG,cAAAA,U;;+CACS9B,OAAO,CAACyB,OAAR,CAAgBM,KAAhB,GAAwBJ,IAAxB,E;;;AAAXK,cAAAA,E;AACJC,cAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,E,CACA;AACA;;;+CAGmB,SAAQG,GAAR,CACjBC,KAAK,CAAC,UAASN,UAAT,CAAD,CAAL,CACGO,IADH,GAEG5B,GAFH,CAEO,UAAC6B,OAAD,EAAUrB,KAAV,EAAoB;AACvB,uBAAOjB,OAAO,CAACyB,OAAR,CAAgBV,MAAhB,CAAuBE,KAAvB,EAA8BU,IAA9B,EAAP;AACD,eAJH,CADiB,C;;;AAAfZ,cAAAA,M;+CAOG;AACLP,gBAAAA,MAAM,EAANA,MADK;AAELM,gBAAAA,SAAS,EAATA,SAFK;AAGLC,gBAAAA,MAAM,EAANA,MAHK;AAILe,gBAAAA,UAAU,EAAVA;AAJK,e;;;;;;;;;;;;EAlBgBlC,S;;AAkG3B,eAAeS,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Table } from \"semantic-ui-react\";\nimport tracker from \"../ethereum/tracker\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport web3 from \"../ethereum/web3\";\nimport AssetRow from \"../components/AssetRow\";\n\nclass AssetTracker extends Component {\n  static async getInitialProps(props) {\n    const buyers = await tracker.methods.getbuyers().call();\n    const producers = await tracker.methods.getproducers().call();\n    const assetCount = await tracker.methods.assetsCount().call();\n    let id = await tracker.methods.getid().call();\n    console.log(id);\n    // const info = await web3.eth.getBlock(blockNumber);\n    // console.log(info);\n\n\n    let assets = await Promise.all(\n      Array(parseInt(assetCount))\n        .fill()\n        .map((element, index) => {\n          return tracker.methods.assets(index).call();\n        })\n    );\n    return {\n      buyers,\n      producers,\n      assets,\n      assetCount\n    };\n  }\n\n  renderbuyers() {\n    const items = this.props.buyers.map(address => {\n      return {\n        header: address,\n        description: \"\",\n        fluid: true\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n  renderproducers() {\n    const items = this.props.producers.map(address => {\n      return {\n        header: address,\n        description: \"\",\n        fluid: true\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n\n  renderRows() {\n    return this.props.assets.map((asset, index) => {\n      return (\n        <AssetRow\n          key={index}\n          id={index}\n          asset={asset}\n          //address={this.props.owner}\n        />\n      );\n    });\n  }\n  render() {\n    const { Header, Row, HeaderCell, Body } = Table;\n\n    return (\n      <Layout>\n        <h3> List of all producers! </h3>\n        <div>{this.renderproducers()}</div>\n        <div>\n          <link\n            rel=\"stylesheet\"\n            href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css\"\n          />\n\n          <h3> List of all Purchesers! </h3>\n          {this.renderbuyers()}\n        </div>\n        <h3> Asset details! </h3>\n\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>ID</HeaderCell>\n              <HeaderCell>Name</HeaderCell>\n              <HeaderCell>Description</HeaderCell>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <HeaderCell>Price</HeaderCell>\n              <HeaderCell>Address of Owner</HeaderCell>\n\n            </Row>\n          </Header>\n          <Body>{this.renderRows()}</Body>\n        </Table>\n      </Layout>\n    );\n  }\n}\n\nexport default AssetTracker;\n"]},"metadata":{},"sourceType":"module"}