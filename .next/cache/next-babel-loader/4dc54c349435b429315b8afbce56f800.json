{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/pages/assets/transfer.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Form, Button, Message, Input, Table } from \"semantic-ui-react\";\nimport tracker from \"../../ethereum/tracker\";\nimport Layout from \"../../components/Layout\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\nimport AssetRow from \"../../components/AssetRow\";\n\nvar TransferForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransferForm, _Component);\n\n  function TransferForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TransferForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TransferForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      id: \"\",\n      value: \"\",\n      zipcode: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var _this$state, id, zipcode, value, accounts;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true,\n                errorMessage: \"\"\n              });\n\n              _this$state = _this.state, id = _this$state.id, zipcode = _this$state.zipcode, value = _this$state.value;\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 6:\n              accounts = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(tracker.methods.transferProduct(id, zipcode).send({\n                from: accounts[0],\n                value: web3.utils.toWei(_this.state.value, \"ether\"),\n                gas: \"1000000\"\n              }));\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 14:\n              _this.setState({\n                loading: false,\n                value: \"\"\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 11]]);\n    });\n\n    return _this;\n  }\n\n  _createClass(TransferForm, [{\n    key: \"renderRows\",\n    value: function renderRows() {\n      return this.props.assets.map(function (asset, index) {\n        return __jsx(AssetRow, {\n          key: index,\n          id: index,\n          asset: asset //address={this.props.owner}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"ID\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Name\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Description\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Manufacturer\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Price\"), __jsx(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Address of Owner\"))), __jsx(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.renderRows())), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"ID\"), __jsx(Input, {\n        value: this.state.id,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            id: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Coordinates\"), __jsx(Input, {\n        value: this.state.zipcode,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            zipcode: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Amount to stake\"), __jsx(Input, {\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Confirm Purchase!\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var assetCount, assets;\n      return _regeneratorRuntime.async(function getInitialProps$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(tracker.methods.assetsCount().call());\n\n            case 2:\n              assetCount = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(_Promise.all(Array(_parseInt(assetCount)).fill().map(function (element, index) {\n                return tracker.methods.assets(index).call();\n              })));\n\n            case 5:\n              assets = _context2.sent;\n              return _context2.abrupt(\"return\", {\n                assets: assets,\n                assetCount: assetCount\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return TransferForm;\n}(Component);\n\nexport default TransferForm;","map":{"version":3,"sources":["/home/parastoo/Dropbox/Projects/Ethereum/SupplyChain/pages/assets/transfer.js"],"names":["React","Component","Form","Button","Message","Input","Table","tracker","Layout","web3","Router","AssetRow","TransferForm","id","value","zipcode","errorMessage","loading","event","preventDefault","setState","state","eth","getAccounts","accounts","methods","transferProduct","send","from","utils","toWei","gas","message","props","assets","map","asset","index","Header","Row","HeaderCell","Body","renderRows","onSubmit","target","assetsCount","call","assetCount","all","Array","fill","element"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Message, Input, Table } from \"semantic-ui-react\";\nimport tracker from \"../../ethereum/tracker\";\nimport Layout from \"../../components/Layout\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\nimport AssetRow from \"../../components/AssetRow\";\n\nclass TransferForm extends Component {\n  static async getInitialProps(props) {\n    const assetCount = await tracker.methods.assetsCount().call();\n\n    let assets = await Promise.all(\n      Array(parseInt(assetCount))\n        .fill()\n        .map((element, index) => {\n          return tracker.methods.assets(index).call();\n        })\n    );\n    return {\n      assets,\n      assetCount\n    };\n  }\n  state = {\n    id: \"\",\n    value: \"\",\n    zipcode: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n  onSubmit = async event => {\n    event.preventDefault();\n    this.setState({ loading: true, errorMessage: \"\" });\n    const { id, zipcode, value } = this.state;\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await tracker.methods.transferProduct(id, zipcode).send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, \"ether\"),\n        gas: \"1000000\"\n      });\n\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n    this.setState({ loading: false, value: \"\" });\n  };\n  renderRows() {\n    return this.props.assets.map((asset, index) => {\n      return (\n        <AssetRow\n          key={index}\n          id={index}\n          asset={asset}\n          //address={this.props.owner}\n        />\n      );\n    });\n  }\n\n  render() {\n    const { Header, Row, HeaderCell, Body } = Table;\n\n    return (\n      <Layout>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>ID</HeaderCell>\n              <HeaderCell>Name</HeaderCell>\n              <HeaderCell>Description</HeaderCell>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <HeaderCell>Price</HeaderCell>\n              <HeaderCell>Address of Owner</HeaderCell>\n            </Row>\n          </Header>\n          <Body>{this.renderRows()}</Body>\n        </Table>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>ID</label>\n            <Input\n              value={this.state.id}\n              onChange={event => this.setState({ id: event.target.value })}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Coordinates</label>\n            <Input\n              value={this.state.zipcode}\n              onChange={event => this.setState({ zipcode: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Amount to stake</label>\n            <Input\n              value={this.state.value}\n              onChange={event =>\n                this.setState({ value: event.target.value })\n              }\n            />\n          </Form.Field>\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\n          <Button loading={this.state.loading} primary>\n            Confirm Purchase!\n          </Button>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default TransferForm;\n"]},"metadata":{},"sourceType":"module"}